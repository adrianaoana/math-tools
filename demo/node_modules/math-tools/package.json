{
  "name": "math-tools",
  "version": "1.0.0",
  "description": "MathTools - is a javascript/node.js module providing some advanced mathematics functionalities",
  "main": "math-tools.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adrianaoana13/math-tools.git"
  },
  "keywords": [
    "math",
    "tools",
    "standardDeviation",
    "adaptiveSimpson",
    "trapezoidal"
  ],
  "author": {
    "name": "Oros Adriana",
    "email": "adrianaoana13@yahoo.com"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/adrianaoana13/math-tools/issues"
  },
  "homepage": "https://github.com/adrianaoana13/math-tools#readme",
  "readme": "# math-tools.js\n=======\nMathTools - is a javascript/node.js module providing some advanced mathematics functionalities.\n\n## Installation\n\n```\nnpm install math-tools\n```\nFor the browser, you can install with [bower](http://bower.io/):\n\n```\nbower install math-tools\n```\n\n### Importing\n\n**nodejs**\n```javascript\nvar mathTools = require('math-tools');\n```\n\n**browser**\n```html\n<script src=\"math-tools.js\"></script>\n```\n\n## API Documentation\n\nA standard import of `var mathTools = require('math-tools')` is assumed in all of the code examples. The import results in an object having the following public properties:\n\n* `isNumber`       \t \t- a function that checks if the given value is a number.\n* `isArray`         \t- a function that checks if the given value is an array.\n* `isObject`        \t- a function that checks if the given value is an object.\n* `isInteger`       \t- a function that checks if the given number is an integer.\n* `isPrime`   \t\t\t- determine whether a number n is prime.\n* `sum`        \t\t\t- determine the sum of a set of numbers.\n* `subtraction`    \t\t- subtracts elements from one another in array.\n* `product`        \t\t- determine the product of a set of numbers.\n* `avg` \t\t\t\t- calculate the average value of a set of numbers in array.\n* `factorial`       \t- determine the factorial (n!) of a number n.\n* `fibonacci` \t\t\t- a function that generates the fibonacci numbers up to a number n.\n* `gcd`      \t\t\t- determine the greastest common divisor amongst two integers.\n* `lcm`    \t\t\t\t- determine the least common multiple amongst two integers.\n* `standardDeviation`   - determine the standard deviation for a set of values.\n* `adaptiveSimpsonQuadrature`    - calculate integral of a function from a to b using adaptive simpson quadrature.\n* `trapezoidal`\t\t\t\t\t - calculate integral of a function from a to b using trapezoidal rule.\n\n**Examples**\n\n- **isPrime:** Determine whether a number **n** is prime.\n\n  ```JavaScript\n  console.log(mathTools.isPrime(16)); // false\n  console.log(mathTools.isPrime(17)); // true\n  ```\n\n- **sum:** Determine the sum of a set of numbers.\n         \n  ```JavaScript\n  var s1 = mathTools.sum([1,2,3]);\n  var s2 = mathTools.sum([{a: 1},{b: 2},{a: 3}], 'a');\n  console.log(s1); // 6\n  console.log(s2); // 4\n  ```\n\n- **subtraction:** Subtracts elements from one another in array.\n         \n  ```JavaScript\n  var s1 = mathTools.subtraction([1,2,3]);\n  var s2 = mathTools.subtraction([{a: 1},{b: 2},{a: 3}], 'a');\n  console.log(s1); // -4\n  console.log(s2); // -2\n  ```\n  \n- **product:** Determine the product of a set of numbers.\n  \n  ```JavaScript\n  var p1 = mathTools.product([1,2,3]);\n  var p2 = mathTools.product([{a: 1},{b: 2},{a: 3}], 'a');\n  console.log(p1); // 6\n  console.log(p2); // 3\n  ```\n\n- **avg:** Calculate the average value of a set of numbers in array.\n  \n  ```JavaScript\n  console.log(mathTools.avg([1,2,3,4,5])); // 3\n  ```  \n  \n- **factorial:** Determine the factorial (_n!_) of a number **n**.\n\n  ```JavaScript\n  console.log(mathTools.factorial(5)); // 120\n  ```\n\n- **fibonacci:** Generates **n** fibonacci numbers.\n  \n  ```JavaScript\n  console.log(mathTools.fibonacci(5)); // [0, 1, 1, 2, 3]\n  console.log(mathTools.fibonacci(12)); // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\n  ```  \n  \n- **gcd:** Calculate the greastest common divisor amongst two integers.\n  \n  ```JavaScript\n  console.log(mathTools.gcd(6,9)); // 3\n  ```\n\n- **lcm:** Calculate the least common multiple amongst two integers.\n \n  ```JavaScript\n  console.log(mathTools.gcd([6,9])); // 18\n  ```\n\n- **standardDeviation:** Determine the standard deviation for a set of values.\n  \n  ```JavaScript\n  console.log(mathTools.standardDeviation([2,3,4,5])); // 1.118033988749895\n  ```\n\n- **adaptiveSimpson:** Calculate integral of a function from a to b using adaptive simpson quadrature.\n \n  ```JavaScript\n\t\n\tvar myFunc = function(x) {\n\t\treturn 2 * x + 1;\n\t};\n\t\n  \tconsole.log(adaptiveQuadrature(myFunc, 1, 2)); // 4\n  ```  \n  \n- **trapezoidal:** Calculate integral of a function from a to b using Trapezoidal rule with n subintervals. By default, the value of subintervals is 200.\n \n  ```JavaScript\n\t\n\tvar myFunc = function(x) {\n\t\treturn 2 * x + 1;\n\t};\n\t\n\tconsole.log(trapezoidRule(myFunc, 1, 2, 200)); // 4\n  ```  \n  \n  \n  \n  \n",
  "readmeFilename": "README.md",
  "gitHead": "17b92cf67d247aecf466f1a459fa88d46e8ca242",
  "_id": "math-tools@1.0.0",
  "_shasum": "6bd0debb660fa4e76a7ddedf74743c593fc48ff9",
  "_from": "math-tools@*"
}
